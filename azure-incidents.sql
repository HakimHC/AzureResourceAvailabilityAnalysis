	-- LETS TRY MAKING EVERYTHING INTO ONE QUERY

-- NO DEGRADED, NO CUSTOMER INITIATED --> TEMPTABLE1 (70.322 ROWS)

DROP TABLE IF EXISTS #TEMP1
SELECT *
INTO #TEMP1
FROM df
WHERE [ReasonType] != 'Customer Initiated' AND [AvailabilityState] != 'Degraded'

-- DECLARE NUMBER OF ROWS

USE hakimdb
GO
DECLARE @ALLROWS INT
SET @ALLROWS = (
SELECT COUNT(*)
FROM df
WHERE [ReasonType] != 'Customer Initiated' AND [AvailabilityState] != 'Degraded' AND
ResourceID_Dummy IN (
SELECT  DISTINCT ResourceID_Dummy
FROM #TEMP1
WHERE [AvailabilityState] = 'UNAVAILABLE')
)

-- MAKE A NEW TABLE WITH ALL THE NECESSARY DATA (RESOURCE IDS WITH UNAVAILABLE --- 39615 ROWS)

DROP TABLE IF EXISTS #TEMP2
SELECT TOP (@ALLROWS) *
INTO #TEMP2
FROM df
WHERE [ReasonType] != 'Customer Initiated' AND [AvailabilityState] != 'Degraded' AND
ResourceID_Dummy IN (
SELECT  DISTINCT ResourceID_Dummy
FROM #TEMP1
WHERE [AvailabilityState] = 'UNAVAILABLE')
ORDER BY ResourceID_Dummy, OccurredTime

-- MAKE TEMP TABLE ALL IN ONE

GO
DROP TABLE IF EXISTS #TEMP_AIO
GO
WITH CTE_1 (RES, LOC, AV, [TIME], PREV, PREV_AV) AS (
	SELECT ResourceID_Dummy, location, AvailabilityState, OccurredTime,
	LAG(OccurredTime) OVER (PARTITION BY ResourceID_Dummy ORDER BY ResourceID_Dummy,OccurredTime) as PREVIOUS,
	LAG(AvailabilityState) OVER (PARTITION BY ResourceID_Dummy ORDER BY ResourceID_Dummy,OccurredTime) as PREV_AV
	FROM #TEMP2
	)
SELECT *,
(CASE
WHEN AV = 'Available' AND PREV_AV = 'Unavailable' THEN DATEDIFF(second, PREV, TIME)
ELSE 0
END)
as DIFF_SECOND,
DAY(EOMONTH(TIME)) AS DAY, DATENAME(month, TIME) AS MONTH, DATENAME(year, TIME) AS YEAR
INTO #TEMP_AIO
FROM CTE_1


-- FINAL RESULT

GO
WITH FINAL_ALL (RESOURCE_ID, MONTH, D, TOTAL, ORD, RESNUM) AS (
	SELECT RES, MONTH, CONVERT(DECIMAL(10,3),DAY), SUM(DIFF_SECOND) AS TOTAL, MIN(TIME), CAST(TRIM('ResourceID_' FROM RES) AS int)
	FROM #TEMP_AIO
	GROUP BY RES, MONTH, DAY
	--ORDER BY RES, MONTH, DAY
	)
SELECT RESOURCE_ID, MONTH, CONVERT(DECIMAL(10,3), TOTAL) AS TOTAL_SECONDS, (((D*24*60*60)-TOTAL)/(D*24*60*60))*100 AS TOTAL_PCT
FROM FINAL_ALL
GROUP BY RESOURCE_ID, MONTH, D, TOTAL, ORD, RESNUM
ORDER BY RESNUM, ORD


DROP TABLE #TEMP1
DROP TABLE #TEMP2
DROP TABLE #TEMP_AIO
